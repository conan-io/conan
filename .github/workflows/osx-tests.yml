name: OSX Tests

on:
  push:
    branches:
      - develop2
      - release/*
      - ci/gh-action-osx
  pull_request:
    branches:
      - '*'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  testing:
    strategy:
      fail-fast: true
      matrix:
        test-type: [functional]
        python-version: ['3.9']
    runs-on: macos-14

    name: Conan ${{ matrix.test-type }} (${{ matrix.python-version }})

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/conans/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python requirements
        run: |
          pip install --upgrade pip
          pip install -r conans/requirements.txt
          pip install -r conans/requirements_server.txt
          pip install -r conans/requirements_dev.txt

      - name: Cache CMake installations
        uses: actions/cache@v3
        with:
          path: ${HOME}/Applications/CMake
          key: ${{ runner.os }}-cmake-${{ matrix.test-type }}-${{ matrix.python-version }}-${{ hashFiles('**/CMakeLists.txt') }}
          restore-keys: |
            ${{ runner.os }}-cmake-

      - name: Install CMake versions
        if: steps.cache-cmake.outputs.cache-hit != 'true'
        run: |
          set -e
          for version in 3.15.7 3.16.9 3.17.5; do
            wget -q --no-check-certificate https://cmake.org/files/v${version%.*}/cmake-${version}-Darwin-x86_64.tar.gz
            tar -xzf cmake-${version}-Darwin-x86_64.tar.gz \
              --exclude=CMake.app/Contents/bin/cmake-gui \
              --exclude=CMake.app/Contents/doc/cmake \
              --exclude=CMake.app/Contents/share/cmake-${version%.*}/Help \
              --exclude=CMake.app/Contents/share/vim
            mkdir -p ${HOME}/Applications/CMake/${version}
            cp -fR cmake-${version}-Darwin-x86_64/CMake.app/Contents/* ${HOME}/Applications/CMake/${version}
            ${HOME}/Applications/CMake/${version}/bin/cmake --version
            rm -rf cmake-${version}-Darwin-x86_64
            rm cmake-${version}-Darwin-x86_64.tar.gz
          done
          for version in 3.19.7 3.23.1; do
            wget -q --no-check-certificate https://cmake.org/files/v${version%.*}/cmake-${version}-macos-universal.tar.gz
            tar -xzf cmake-${version}-macos-universal.tar.gz \
              --exclude=CMake.app/Contents/bin/cmake-gui \
              --exclude=CMake.app/Contents/doc/cmake \
              --exclude=CMake.app/Contents/share/cmake-${version%.*}/Help \
              --exclude=CMake.app/Contents/share/vim
            mkdir -p ${HOME}/Applications/CMake/${version}
            cp -fR cmake-${version}-macos-universal/CMake.app/Contents/* ${HOME}/Applications/CMake/${version}
            ${HOME}/Applications/CMake/${version}/bin/cmake --version
            rm -rf cmake-${version}-macos-universal
            rm cmake-${version}-macos-universal.tar.gz
          done

      - name: Cache Bazel installations
        uses: actions/cache@v3
        with:
          path: ${HOME}/Applications/bazel
          key: ${{ runner.os }}-bazel-${{ matrix.test-type }}-${{ matrix.python-version }}-${{ hashFiles('**/WORKSPACE') }}
          restore-keys: |
            ${{ runner.os }}-bazel-

      - name: Install Bazel versions
        if: steps.cache-bazel.outputs.cache-hit != 'true'
        run: |
          set -e
          for version in 6.3.2 7.1.2; do
            mkdir -p ${HOME}/Applications/bazel/${version}
            wget -q -O ${HOME}/Applications/bazel/${version}/bazel https://github.com/bazelbuild/bazel/releases/download/${version}/bazel-${version}-darwin-x86_64
            chmod +x ${HOME}/Applications/bazel/${version}/bazel
          done

      - name: Cache Homebrew dependencies
        uses: actions/cache@v3
        with:
          path: /opt/homebrew
          key: ${{ runner.os }}-homebrew-${{ hashFiles('**/Brewfile') }}
          restore-keys: |
            ${{ runner.os }}-homebrew-

      - name: Install homebrew dependencies
        run: |
          brew install xcodegen

      - name: Check for Xcode compiler version
        run: |
          xcodebuild -version
          xcrun --show-sdk-path
          xcrun --find clang++

      - name: Run Test - ${{ matrix.test-type }}
        shell: bash
        run: |
          if [ "${{ matrix.test-type }}" == "unittests" ]; then
            pytest test/unittests --durations=20
          elif [ "${{ matrix.test-type }}" == "integration" ]; then
            pytest test/integration --durations=20
          elif [ "${{ matrix.test-type }}" == "functional" ]; then
            pytest test/functional --durations=20
          fi
